package com.hp.service.impl;

import java.util.List;

import com.hp.dao.IAssetDao;
import com.hp.dao.IBankDao;
import com.hp.dao.impl.AssetDao;
import com.hp.dao.impl.BankDao;
import com.hp.po.Admin;
import com.hp.po.Asset;
import com.hp.po.Bank;
import com.hp.po.User;
import com.hp.service.IAdminService;
import com.hp.service.IAssetServie;
import com.hp.vo.AssetInfo;

/**
 * @Description:资产业务操作类 实现IAssetService
 * @author chaoling
 * @date 2018年8月1日
 */
public class AssetService implements IAssetServie {
	
	//将需要的对象私有化
	private IAssetDao assetDao = new AssetDao();
	private IBankDao bankDao = new BankDao();

	@Override
	public List<AssetInfo> selectAllAssetByUserId(User user) {
		//接收返回值
		List<AssetInfo> res = assetDao.selectAllAssetByUserId(user.getUserId());
		//当返回值不为null且size()不为0时返回res,否则返回null
		if (res != null && res.size() != 0)
			return res;

		return null;
	}

	@Override
	public double selectSumAsset(User user) {
		//返回资产
		return assetDao.selectSumAsset(user.getUserId());
	}

	@Override
	public int updateOfTake(Asset asset) {

		Asset res = assetDao.selectOfTakeOrSave(asset);

		if (res == null)
			return -1;

		double updatecarMoney = asset.getCardMoney();
		updatecarMoney = Math.abs(updatecarMoney);
		double carMoney = res.getCardMoney();

		if (updatecarMoney <= carMoney) {
			int updateRes = assetDao.updateAsset(asset);
			if (updateRes > 0)
				return 1;
			return 0;
		}

		return 2;
	}

	@Override
	public int updateOfSave(Asset asset) {

		Asset res = assetDao.selectOfTakeOrSave(asset);

		if (res == null)
			return -1;

		int updateRes = assetDao.updateAsset(asset);
		if (updateRes > 0)
			return 1;
		return 0;
	}

	@Override
	public int addNewAsset(Asset asset) {
		
		Bank bank = bankDao.selectByBankId(asset.getBankId());
		
		if(bank == null)
			return -1;
		int res = assetDao.selectCardNum(asset);
		if(res > 0)
			return 2;
		int addRes = assetDao.addAsset(asset);
		
		if(addRes > 0)
			return 1;
		
		return 0;
	}
}
