package com.hp.dao.impl;

import java.util.List;

import org.apache.commons.dbutils.handlers.BeanHandler;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import com.hp.dao.IAssetDao;
import com.hp.po.Asset;
import com.hp.po.Bank;
import com.hp.util.DBUtil;

/**
 * @Description:对Asset表的操作，实现IAssetDao接口
 * @author chaoling
 * @date 2018年8月1日
 */
public class AssetDao implements IAssetDao {

	@Override
	public List<Asset> selectAllAssetByUserName(int userId) {
		String sql = "select * from asset where userId = ?";
		return DBUtil.query(sql, new BeanListHandler<>(Asset.class), userId);
	}

	@Override
	public int addAsset(Asset asset) {

		String sql = "insert into asset values(?,?,?,?,?)";
		Object[] params = { asset.getBankId(), asset.getCardNum(), asset.getCarMoney(), asset.getCareteDate(),
				asset.getUserId() };

		return DBUtil.update(sql, params);
	}

	@Override
	public int updateAsset(Asset asset) {

		String sql = "update asset set cardMoney = cardMoney + ? where bankId = ? and cardNum = ? and userId = ?";
		Object[] params = { asset.getCardMoney(), asset.getBankId(), asset.getCardNum(), asset.getUserId() };
		return DBUtil.update(sql, params);
	}

	@Override
	public double selectSumAsset(int userId) {

		String sql = "select sum(cardMoney) from asset where userId = ?";

		Asset asset = DBUtil.query(sql, new BeanHandler<>(Asset.class), userId);
		return asset.getCarMoney();
	}

	@Override
	public int selectCardNumByBankId(Asset asset) {

		String sql = "select * from asset where bankId = ? and userId = ?";
		Object[] params = {asset.getBankId(),asset.getUserId()};
		
	List<Asset> res = DBUtil.query(sql, new BeanListHandler<>(Asset.class), params);
	if(res != null)
		return -1;
	return 1;
	
	}

	@Override
	public int deleteByBankId(int bankId) {

		String sql = "delete from asset where bankId = ?";

		return DBUtil.update(sql, bankId);
	}

	@Override
	public Asset selectOfTakeOrSave(Asset asset) {

		String sql = "select * from asset where userId = ? and bankId = ? and cardNum = ?";
		Object[] params = { asset.getUserId(), asset.getBankId(), asset.getCardNum() };

		return DBUtil.query(sql, new BeanHandler<>(Asset.class), params);
	}

}
