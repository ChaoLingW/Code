package com.hpe.java.day0725;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;

public class TelManage {

	Scanner sc = new Scanner(System.in);

	// 添加
	public void addTel() {
		System.out.println("---------添加电话本--------");

		Telephone telephone = addT();
		writer(telephone);

		System.out.println("添加成功");

	}

	// 删除
	public void delTel() {

		// 从已经有电话本的元素中查看是否有此姓名的元素
		System.out.println("请输入要删除的名字");

		String name = sc.nextLine();

		String str = selectAllTel(name);

		if (str != null) {
			
			BufferedReader br = null;
			BufferedWriter bw = null;
			
			try {
				br = new BufferedReader(new FileReader("tel.txt"));
				bw = new BufferedWriter(new FileWriter("tel.txt"));
				
				String readLine; 
				while((readLine = br.readLine()) != null){
					
					if(readLine.indexOf(name)!= -1){
						bw.write(str);
						bw.flush();
					}
				}
				
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} finally {
				try {
					if(bw != null)
						bw.close();
					if(br != null)
						br.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
			
			
			
			System.out.println("刪除成功");
		}else{
			System.out.println("此人不存在");
		}

	}

	// 修改
	public void updateTel() {

		System.out.println("---------修改电话本--------");
		System.err.println("请输入要修改的姓名");

		String name = sc.nextLine();

		/*int index = selectAllTel(name);

		if (index != -1) {
			Telephone telephone = addT();
			String str = telephone.toString();
			list.set(index, str);
			writer(list);
			System.out.println("修改成功");
		}*/

	}

	// 查询全部
	public void selectAllTel() {

		BufferedReader br = null;
		String res = null;

		try {
			br = new BufferedReader(new FileReader("tel.txt"));

			String str;
			while ((str = br.readLine()) != null) {

				System.out.println(str);

			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (br != null)
				try {
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
		}

	}

	// 根据姓名查询

	public void selectTelByName() {

		System.out.println("请输入查询的名字");
		String name = sc.nextLine();

		String str = selectAllTel(name);

		if (str != null)
			System.out.println(str);
		else {
			System.out.println("此人不存在");
		}
	}

	// 重載
	public Telephone addT() {
		System.out.println("姓名：");
		String name = sc.nextLine();
		System.out.println("性别：");
		String sex = sc.nextLine();
		System.out.println("年龄：");
		int age = sc.nextInt();
		sc.nextLine();
		System.out.println("电话：");
		String tel = sc.nextLine();
		System.out.println("Q Q：");
		String qq = sc.nextLine();
		System.out.println("地址：");
		String address = sc.nextLine();

		Telephone telephone = new Telephone(name, sex, age, tel, qq, address);

		System.out.println(telephone);

		return telephone;

	}

	// 写入
	public void writer(Telephone telephone) {

		BufferedWriter bw = null;
		try {
			bw = new BufferedWriter(new FileWriter("tel.txt",false));
			
				bw.write(telephone.toString());
				bw.newLine();
				bw.flush();
			
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (bw != null)
				try {
					bw.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
		}

	}

	// 查找
	public String selectAllTel(String name) {

		BufferedReader br = null;
		String res = null;
		try {
			br = new BufferedReader(new FileReader("tel.txt"));

			String str;
			while ((str = br.readLine()) != null) {
				if (name != null) {
					if (str.indexOf(name) != -1)
						res = str;
				}
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (br != null)
				try {
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
		}
		return res;
	}


}
