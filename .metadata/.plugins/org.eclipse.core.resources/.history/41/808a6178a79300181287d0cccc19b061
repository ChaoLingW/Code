package com.hpe.java;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class UserManage {

	static Scanner sc = new Scanner(System.in);

	public static void main(String[] args) {

		while (true) {

			System.out.println("-----------用户管理----------");
			System.out.println("1.添加\t2.删除\t3.修改\t4查询\t5.查询全部\t0.退出");
			System.out.println("请选择业务：");

			String choice = sc.nextLine();

			switch (choice) {
			case "1":
				add();
				break;

			case "2":
				delete();
				break;

			case "3":
				update();
				break;

			case "4":
				select();
				break;

			case "5":
				selectAll();
				break;

			case "0":
				System.out.println("谢谢使用");
				System.exit(0);
				break;

			default:
				System.out.println("输入有误");
				break;
			}
		}
	}

	private static void add() {
		// 显示工作
		System.out.println("请输入用户名");
		String userName = sc.nextLine();

		System.out.println("请输入密   码");
		String password = sc.nextLine();

		System.out.println("请输入真实姓名");
		String realName = sc.nextLine();

		System.out.println("请输入年   龄");
		int age = sc.nextInt();

	}

	// 像数据库中添加用户的方法
	private static addUser(String userName,String password,String realName,int age){
		
	}

	private static void delete() {

	}

	private static void update() {

	}

	private static void select() {

	}

	private static void selectAll() {
		//

	}

	// 返回与数据库bigdata2的连接
	public Connection getConnection() {

		String driver = "com.mysql.jdbc.Driver";
		String user = "root";// 用户名
		String password = "mysql";// 密码
		String url = "jdbc:mysql://localhost:3306/bigdata2?useUnicode=true&characterEncoding=utf-8";// 地址

		Connection connection = null;
		try {
			Class.forName(driver);// 参数是驱动类的全类名
			connection = DriverManager.getConnection(url, user, password);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}

		return connection;
	}

	// 关闭Connection
	public void close(Connection connection) {

		if (connection != null)
			try {
				connection.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
	}

	// 重载
	// 关闭Statement
	public void close(Statement pstmt) {

		if (pstmt != null)
			try {
				pstmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
	}

	//重载
	// 关闭ResultSet
	public void close(ResultSet resultSet) {

		if (resultSet != null)
			try {
				resultSet.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
	}

}
