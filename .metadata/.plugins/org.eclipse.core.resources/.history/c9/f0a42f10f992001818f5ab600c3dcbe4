package com.teljdbc.dao;

import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.teljdbc.po.Telephone;

/**
 * @Description: 数据库操作类
 * @author chaoling
 * @date 2018年7月29日下午1:40:08
 */
public class TelDao {

	/**
	 * @Description: 创建数据库连接
	 * @return  Connection
	 * @throws ClassNotFoundException SQLException
	 */
	public Connection getConnection(){
		
		String driver = "com.mysql.jdbc.Driver";
		String user = "root";
		String password = "mysql";
		String url = "jdbc:mysql://localhost:3306/telephone?useUnicode=true&characterEncoding=utf-8";

		Connection connection = null;
		
		try {
			Class.forName(driver);
			connection = DriverManager.getConnection(url, user, password);
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return connection;
	}
	
	/**
	 * @Description: 关闭连接 关闭Connection
	 * @param connection     
	 * @throws SQLException
	 */
	public void close(Connection connection){
		
		if(connection != null)
			try {
				connection.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
	}
	
	/**
	 * @Description: 关闭连接 关闭Statement
	 * @param stmt     
	 * @throws SQLException
	 */
	public void close(Statement stmt){
		
		if(stmt != null)
			try {
				stmt.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
	}
	
	/**
	 * @Description: 向数据库中插入数据
	 * @param telephone
	 * @return flag    
	 * @throws SQLException
	 */
	public boolean insert(Telephone telephone){
		
		String sql = "insert into telephone (name,sex,age,tel,qq,address) values (?,?,?,?,?,?)";
		Connection connection = getConnection();
		PreparedStatement pstmt = null;
		boolean flag = true;
		
		try {
			pstmt = connection.prepareStatement(sql);
			
			pstmt.setString(1, telephone.getName());
			pstmt.setString(2, telephone.getSex());
			pstmt.setInt(3, telephone.getAge());
			pstmt.setString(4, telephone.getTel());
			pstmt.setString(5, telephone.getQq());
			pstmt.setString(6, telephone.getAddress());
			
			int row = pstmt.executeUpdate();
			
			if(row < 0)
				flag = false;
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(pstmt);
			close(connection);
		}
		return flag;
	}
	
	public void select(){
		
		String sql = "select * from telephone";
		Connection connection = getConnection();
		PreparedStatement pstmt = null;
		
		try {
			pstmt = connection.prepareStatement(sql);
			
			ResultSet result = pstmt.executeQuery();
			
			while(result.next()){
				result.getString(1);
				result.getString(2);
				result.getInt(3);
				result.getString(4);
				result.getString(5);
				result.getString(6);
			}
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		
	}
	
	
	
}
