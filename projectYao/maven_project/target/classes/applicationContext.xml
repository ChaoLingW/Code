<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 注解扫描 -->
	<context:component-scan base-package="com.hpe"></context:component-scan>

	<!-- 加载db.properties配置文件，location指定位置 -->
	<context:property-placeholder
		location="classpath:db.properties" />


	<!-- 配置c3p0数据源 ，配置c3p0数据源的bean -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 注入连接数据库的属性 -->
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 通过spring管理SqlSessionFactory、mapper接口 -->

	<!-- 配置sqlSessionFactory的bean -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置mybatis核心配置文件的路径 -->
		<property name="configLocation"
			value="classpath:SqlMapConfig.xml"></property>
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定批量创建别名的包 -->
		<property name="typeAliasesPackage" value="com.hpe.po"></property>

		<property name="plugins">
			<array>
				<!--pagehelper分页配置 -->
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
							offsetAsPageNum=true
							<!-- 防止出现小于第一页，大于最后一页的异常情况出现。 -->
							reasonable=true
						</value>
					</property>
				</bean>
				<bean class="com.github.abel533.mapperhelper.MapperInterceptor">

					<property name="properties">

						<value>
							<!-- 主键自增回写方法，默认值MYSQL -->
							IDENTITY=MYSQL
							mappers=com.github.abel533.mapper.Mapper
						</value>

					</property>

				</bean>
			</array>
		</property>
	</bean>


	<!-- 之前学习的spring整合mybatis时的方式： -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- basePackage:指明，创建哪个包下的Mapper接口实现类的bean -->
		<property name="basePackage" value="com.hpe.mapper"></property>
		<!-- 指定sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>
	</bean>


	<!-- spring的声明式事务注解方式 -->
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 开启事务管理注解 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />


</beans>